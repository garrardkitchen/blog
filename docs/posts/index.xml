<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog</title>
    <link>http://blog.garrardkitchen.com/posts/</link>
    <description>Recent content on Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language><atom:link href="http://blog.garrardkitchen.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Nodejs Container Restart Policy</title>
      <link>http://blog.garrardkitchen.com/posts/nodejs-container-restart-policy/</link>
      <pubDate>Mon, 21 Sep 2020 16:36:35 +0100</pubDate>
      
      <guid>http://blog.garrardkitchen.com/posts/nodejs-container-restart-policy/</guid>
      <description>If by accident to deploy a solution using the Node.js Cluster API and do not fork exited processes then the following docker-compose restart_policy will not help you:
deploy: restart_policy: condition: on-failure If you&amp;rsquo;re using the Cluster API to schedule tasks across your processes, and all forked processes die, then the docker engine will just assume you&amp;rsquo;ve gracefully shutdown.
Take this code for example, you will see that it doesn&amp;rsquo;t fork another process and therefore, at some point it will no longer process any anything:</description>
    </item>
    
    <item>
      <title>How to run the Apache Ignite Agent with an Ignite.NET Core Server Node</title>
      <link>http://blog.garrardkitchen.com/posts/apache-ignite-running-agent-with-dotnetcore-server-node/</link>
      <pubDate>Tue, 28 Jul 2020 13:48:46 +0100</pubDate>
      
      <guid>http://blog.garrardkitchen.com/posts/apache-ignite-running-agent-with-dotnetcore-server-node/</guid>
      <description>I&amp;rsquo;ve recently been researching into Apache Ignite. Apache Ignite is an in-memory, memory-centric, distributed database, caching and processing platform for transactional, analytical, and streaming workloads.
So why the post? Well, with using .NET Core, I have run into one or two challenges that I have had to work through. One of which involves the Agent. I feel it is important to share with you how I get beyond this issue. It may save you a lot of time if you&amp;rsquo;re an Apache Ignite noob like me.</description>
    </item>
    
    <item>
      <title>Terraform Get Values</title>
      <link>http://blog.garrardkitchen.com/posts/terraform-get-values/</link>
      <pubDate>Thu, 23 Jul 2020 13:42:59 +0100</pubDate>
      
      <guid>http://blog.garrardkitchen.com/posts/terraform-get-values/</guid>
      <description>With not wanting to have hard coded values pushed to a project&amp;rsquo;s code repository, and an antiquated way to derive Azure Service Principal credentials, I set about exploring ways on accomplishing this with this in mind using Terraform.
Attempt 1 Here ins my first attempt, I load all permutations into map variables. I use an environment variable as an indexer to the appropriate map value:
provider &amp;#34;azurerm&amp;#34; { version = &amp;#34;=2.</description>
    </item>
    
    <item>
      <title>Digital Certificates</title>
      <link>http://blog.garrardkitchen.com/posts/digital-certificates/</link>
      <pubDate>Mon, 08 Jun 2020 12:57:32 +0100</pubDate>
      
      <guid>http://blog.garrardkitchen.com/posts/digital-certificates/</guid>
      <description>I&amp;rsquo;ve been wanting to put some notes down on digital certificates, signing and JWT for some time now. I find there are plenty of confusing terms involved in this area, plus a few nuances that have added to my personal confusion. I feel it now important to document these before I forget and move on [to another project].
So, what&amp;rsquo;s triggered this post? Well, one of many tasks I&amp;rsquo;m involved in [juggling] evolves SSO (single sign on).</description>
    </item>
    
    <item>
      <title>Unit testing and mocking fs.ReadFileSync</title>
      <link>http://blog.garrardkitchen.com/posts/jest-fs-readFileSync/</link>
      <pubDate>Thu, 28 May 2020 07:32:45 +0000</pubDate>
      
      <guid>http://blog.garrardkitchen.com/posts/jest-fs-readFileSync/</guid>
      <description>I&amp;rsquo;d just ran npm run test in a newly created package I&amp;rsquo;d added to a monorepo (lerna) I&amp;rsquo;d created for a project I was working on that integrates with Twilio Sync, RabbitMQ, Twilio TaskRouter and MSSQL, and I go this:
*******************************consumers\packages\eda [CRMBROK-233 +0 ~2 -0 !]&amp;gt; npm run test &amp;gt; @cf247/eda@1.0.2 test *******************************consumers\packages\eda &amp;gt; jest FAIL __tests__/eda.test.js ‚óè Test suite failed to run ENOENT: no such file or directory, open &amp;#39;.</description>
    </item>
    
    <item>
      <title>Kubernetes on Windows</title>
      <link>http://blog.garrardkitchen.com/posts/kubernetes-on-windows/</link>
      <pubDate>Mon, 06 Apr 2020 10:20:26 +0100</pubDate>
      
      <guid>http://blog.garrardkitchen.com/posts/kubernetes-on-windows/</guid>
      <description>This post is a reminder to me of what needs to be installed in order for a pod, created from a local image, that is to be served up via a kubernetes cluster, to be run from your local development environment.
What is Kubernetes and why is it so important? &amp;ldquo;Kubernetes is a portable, extensible, open-source platform for managing containerized workloads and services, that facilitates both declarative configuration and automation. It has a large, rapidly growing ecosystem.</description>
    </item>
    
    <item>
      <title>Modern-ish Javascript</title>
      <link>http://blog.garrardkitchen.com/posts/modern-javascript/</link>
      <pubDate>Sun, 05 Apr 2020 10:16:22 +0100</pubDate>
      
      <guid>http://blog.garrardkitchen.com/posts/modern-javascript/</guid>
      <description>This post includes a few notes on ECMA language features that I like as well as some info on memory leaking. I have no doubt that it will read disjointed; I started this eons ago and only now have I decided to publish it.
A simple reminder of what Node.js is &amp;hellip;it is a set of APIs wrapped around the V8 Engine (written in c++) and is a high-performance JavaScript and WebAssembly engine.</description>
    </item>
    
    <item>
      <title>How do I mentor?</title>
      <link>http://blog.garrardkitchen.com/posts/mentoring/</link>
      <pubDate>Thu, 26 Mar 2020 06:09:14 +0100</pubDate>
      
      <guid>http://blog.garrardkitchen.com/posts/mentoring/</guid>
      <description>I have written this post to document my experiences of mentoring. I have mentored front-end engineers, back-end engineers and UX designers. I have had the pleasure of helping others as well as learning one of two things about myself along this journey too. If ever you get the opportunity to be a mentor, I recommend you jump at the opportunity. It is a self-rewarding experience.
So, what is mentoring?&amp;hellip;
The definition of Mentoring is the act of advising or training (someone, especially a younger colleague).</description>
    </item>
    
    <item>
      <title>Good Engineering - Principles</title>
      <link>http://blog.garrardkitchen.com/posts/principles/</link>
      <pubDate>Sun, 01 Mar 2020 20:09:14 +0100</pubDate>
      
      <guid>http://blog.garrardkitchen.com/posts/principles/</guid>
      <description>I have written this post as a method to document what I see as the basics, foundations if you will, for good engineering. Undoubtedly if you are a seasoned engineer, you will recognised all of these principles, less so, if you&amp;rsquo;re just starting out.
Most Engineers are fully versed in the foundations of writing quality, efficient, succinct and testable code. As a Principal Engineer, one of my responsibilities is to ensure that these (1) foundations are recognised by the engineers and (2) are adhered to by all engineers.</description>
    </item>
    
  </channel>
</rss>
