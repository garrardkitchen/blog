<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gridgain on Blog</title>
    <link>http://blog.garrardkitchen.com/tags/gridgain/</link>
    <description>Recent content in gridgain on Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Tue, 28 Jul 2020 13:48:46 +0100</lastBuildDate>
    
	<atom:link href="http://blog.garrardkitchen.com/tags/gridgain/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to run the Apache Ignite Agent with an Ignite.NET Core Server Node</title>
      <link>http://blog.garrardkitchen.com/posts/apache-ignite-running-agent-with-dotnetcore-server-node/</link>
      <pubDate>Tue, 28 Jul 2020 13:48:46 +0100</pubDate>
      
      <guid>http://blog.garrardkitchen.com/posts/apache-ignite-running-agent-with-dotnetcore-server-node/</guid>
      <description>I&amp;rsquo;ve recently been researching into Apache Ignite. Apache Ignite is an in-memory, memory-centric, distributed database, caching and processing platform for transactional, analytical, and streaming workloads.
So why the post? Well, with using .NET Core, I have run into one or two challenges that I have had to work through. One of which involves the Agent. I feel it is important to share with you how I get beyond this issue. It may save you a lot of time if you&amp;rsquo;re an Apache Ignite noob like me.</description>
    </item>
    
  </channel>
</rss>